plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.memorial'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// devtools : 수정 변경시 자동으로 톰캣을 restart (중지 => 시작) : 자동으로 컴파일
	// developmentOnly : 실제 서비스로 빌드할 때는 빌드 되지 않도록 설정, 개발시에만 필요함.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//lombok 라이브러리 등록
	compileOnly 'org.projectlombok:lombok'			//컴파일 단계에서만 필요한 경우에 사용됨
	annotationProcessor 'org.projectlombok:lombok'	//컴파일 단계에서 어노테이션을 분석 처리함.
	//H2 라이브러리
	runtimeOnly 'com.h2database:h2'		//실행시에만 작동, 테스트 환경
	//JPA 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//Thymeleaf : View, 백엔드에서 처리한 데이터를 .html 에 넣어 줄 수 있도록
	// 처리해주는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//Spring 에서 제공해주는 유효성 검사 라이브러리 : form에서 빈값이나 글자수 제한
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

	//마크다운
	implementation 'org.commonmark:commonmark:0.21.0'
	
	//oracle 라이브러리
	implementation 'com.oracle.database.jdbc:ojdbc11'
	
	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	
}

tasks.named('test') {
	useJUnitPlatform()
}
